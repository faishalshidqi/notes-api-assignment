definitions:
  domains.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  domains.GetNoteResponse:
    properties:
      data:
        $ref: '#/definitions/domains.Note'
      message:
        type: string
      status:
        type: string
    type: object
  domains.GetNotesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/domains.Note'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  domains.LoginResponse:
    properties:
      data:
        $ref: '#/definitions/domains.LoginResponseData'
      message:
        type: string
      status:
        type: string
    type: object
  domains.LoginResponseData:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  domains.MutateNoteResponse:
    properties:
      data:
        $ref: '#/definitions/domains.MutateNoteResponseData'
      message:
        type: string
      status:
        type: string
    type: object
  domains.MutateNoteResponseData:
    properties:
      id:
        type: string
      owner:
        type: string
      title:
        type: string
    type: object
  domains.Note:
    properties:
      body:
        type: string
      created_at:
        type: string
      id:
        type: string
      owner:
        type: string
      title:
        type: string
      updated_at:
        type: string
    required:
    - body
    - title
    type: object
  domains.SignupResponse:
    properties:
      data:
        $ref: '#/definitions/domains.SignupResponseData'
      message:
        type: string
      status:
        type: string
    type: object
  domains.SignupResponseData:
    properties:
      fullname:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
  domains.SuccessResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:5000
info:
  contact: {}
  description: This is a Notes API
  title: Assignment Notes API
  version: "1.0"
paths:
  /authentications:
    post:
      consumes:
      - application/json
      parameters:
      - description: username address of the user
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: password of the user
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domains.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
      summary: Login with Username & Password
      tags:
      - authentication
  /notes:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domains.GetNotesResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
      summary: Get All Notes Owned By The User Logged In
      tags:
      - notes
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: title of the note
        in: body
        name: title
        required: true
        schema:
          type: string
      - description: body of the note
        in: body
        name: description
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domains.MutateNoteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
      summary: Create Note
      tags:
      - notes
  /notes/{note_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: id of the note
        in: path
        name: note_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domains.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
      summary: Delete Note
      tags:
      - notes
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: id of the note
        in: path
        name: note_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domains.GetNoteResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
      summary: Get Note By ID
      tags:
      - notes
    put:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: id of the note
        in: path
        name: note_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domains.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
      summary: Edit Note
      tags:
      - notes
  /users:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domains.SignupResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
      summary: Fetch User Data By ID
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: email address of the new user, must be unique
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: password of the new user
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: name of the new user
        in: body
        name: name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domains.SignupResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domains.ErrorResponse'
      summary: Register A User
      tags:
      - users
swagger: "2.0"
